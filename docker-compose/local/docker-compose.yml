version: '3.7'

services:
  mariadb:
    image: mariadb:10.11.7
    container_name: mariadb
    restart: unless-stopped
    volumes:
      - mariadb-data:/lib/var/mysql
      - ../common/initdb.d:/docker-entrypoint-initdb.d
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${USER_NAME}
      MARIADB_PASSWORD: ${USER_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      TZ: 'Asia/Seoul'
    ports:
      - "3306:3306"
  auth-mariadb:
    image: mariadb:10.11.7
    container_name: auth-mariadb
    restart: unless-stopped
    volumes:
      - auth-mariadb-data:/lib/var/mysql
      - ../auth/initdb.d:/docker-entrypoint-initdb.d
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      MARIADB_DATABASE: ${AUTH_DB_NAME}
      MARIADB_USER: ${AUTH_USER_NAME}
      MARIADB_PASSWORD: ${AUTH_USER_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${AUTH_DB_ROOT_PASSWORD}
      TZ: 'Asia/Seoul'
    ports:
      - "3307:3306"
  auth-redis:
    image: redis:7.2.4
    container_name: auth-redis
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${AUTH_REDIS_PASSWORD}
    volumes:
      - auth-redis-data:/data
    ports:
      - "6379:6379"

  user-mariadb:
    image: mariadb:10.11.7
    container_name: user-mariadb
    restart: unless-stopped
    volumes:
      - user-mariadb-data:/lib/var/mysql
      - ../user/initdb.d:/docker-entrypoint-initdb.d
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    environment:
      MARIADB_DATABASE: ${USER_DB_NAME}
      MARIADB_USER: ${USER_USER_NAME}
      MARIADB_PASSWORD: ${USER_USER_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${USER_DB_ROOT_PASSWORD}
      TZ: 'Asia/Seoul'
    ports:
      - "3308:3306"

  place-neo4j:
    image: neo4j:5.19.0-community
    container_name: place-neo4j
    restart: unless-stopped
    volumes:
      - place-neo4j-data:/data
      - place-neo4j-conf:/conf
    environment:
      TZ: 'Asia/Seoul'
    ports:
      - "7474:7474"
      - "7687:7687"

  tour-neo4j:
    image: neo4j:5.19.0-community
    container_name: tour-neo4j
    restart: unless-stopped
    volumes:
      - tour-neo4j-data:/data
      - tour-neo4j-conf:/conf
      - ../tour/import:/import
    environment:
      - NEO4J_AUTH=${TOUR_NEO4J_USER_NAME}/${TOUR_NEO4J_USER_PASSWORD}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.cypher.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.coll.*,apoc.load.*,gds.*
      - NEO4J_dbms_security_allow__csv__import__from__file__urls=true
      - TZ='Asia/Seoul'
    ports:
      - "7475:7474"
      - "7688:7687"



  checklist-neo4j:
    image: neo4j:5.19.0-community
    container_name: checklist-neo4j
    restart: unless-stopped
    volumes:
      - checklist-neo4j-data:/data
      - checklist-neo4j-conf:/conf
      - ../checklist/import:/import
    environment:
      NEO4J_AUTH: ${TOUR_NEO4J_USER_NAME}/${TOUR_NEO4J_USER_PASSWORD}
      NEO4J_dbms_security_allow__csv__import__from__file__urls: true
      TZ: 'Asia/Seoul'
    ports:
      - "7476:7474"
      - "7689:7687"

  payment-mongodb:
    image: mongo:7.0
    container_name: payment-mongodb
    restart: unless-stopped
    volumes:
      - payment-mongodb-data:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${PAYMENT_MONGO_DB_ROOT_USER_NAME}
      MONGO_INITDB_ROOT_PASSWORD: ${PAYMENT_MONGO_DB_ROOT_USER_PASSWORD}
      DB_NAME: ${PAYMENT_MONGO_DB_NAME}
    ports:
      - "27017:27017"

  payment-mongo-express:
    image: mongo-express
    container_name: payment-mongo-express
    restart: unless-stopped
    ports:
      - "8888:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${PAYMENT_MONGO_DB_ROOT_USER_NAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${PAYMENT_MONGO_DB_ROOT_USER_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: payment-mongodb
      ME_CONFIG_BASICAUTH_USERNAME: ${PAYMENT_MONGO_EXPRESS_USER_NAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${PAYMENT_MONGO_EXPRESS_USER_PASSWORD}

  zookeeper:
    image: bitnami/zookeeper:3.8.3
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-data:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    restart: unless-stopped
    ports:
      - "9093:9093"
    expose:
      - "9093"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="kafka_capstone_event_bus:1:1"
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - kafka-data:/bitnami/kafka

volumes:
  mariadb-data:
  auth-redis-data:
  auth-mariadb-data:
  user-mariadb-data:
  place-neo4j-data:
  tour-neo4j-data:
  checklist-neo4j-data:
  payment-mongodb-data:
  zookeeper-data:
  kafka-data:
  place-neo4j-conf:
  tour-neo4j-conf:
  checklist-neo4j-conf:

networks:
  default:
    external: true
    name: TourlistNetwork